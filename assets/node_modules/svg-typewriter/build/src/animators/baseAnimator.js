/**
 * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.
 * Licensed under the MIT License (the "License"); you may obtain a copy of the
 * license at https://github.com/palantir/svg-typewriter/blob/develop/LICENSE
 */
"use strict";
var d3 = require("d3");
var BaseAnimator = (function () {
    function BaseAnimator() {
        this.duration(BaseAnimator.DEFAULT_DURATION_MILLISECONDS);
        this.delay(0);
        this.easing(BaseAnimator.DEFAULT_EASING);
        this.moveX(0);
        this.moveY(0);
    }
    BaseAnimator.prototype.animate = function (selection) {
        var xForm = d3.transform("");
        xForm.translate = [this.moveX(), this.moveY()];
        selection.attr("transform", xForm.toString());
        xForm.translate = [0, 0];
        return this._animate(selection, { transform: xForm.toString() });
    };
    BaseAnimator.prototype._animate = function (selection, attr) {
        return selection.transition()
            .ease(this.easing())
            .duration(this.duration())
            .delay(this.delay())
            .attr(attr);
    };
    BaseAnimator.prototype.duration = function (duration) {
        if (duration == null) {
            return this._duration;
        }
        else {
            this._duration = duration;
            return this;
        }
    };
    BaseAnimator.prototype.moveX = function (shift) {
        if (shift == null) {
            return this._moveX;
        }
        else {
            this._moveX = shift;
            return this;
        }
    };
    BaseAnimator.prototype.moveY = function (shift) {
        if (shift == null) {
            return this._moveY;
        }
        else {
            this._moveY = shift;
            return this;
        }
    };
    BaseAnimator.prototype.delay = function (delay) {
        if (delay == null) {
            return this._delay;
        }
        else {
            this._delay = delay;
            return this;
        }
    };
    BaseAnimator.prototype.easing = function (easing) {
        if (easing == null) {
            return this._easing;
        }
        else {
            this._easing = easing;
            return this;
        }
    };
    return BaseAnimator;
}());
/**
 * The default duration of the animation in milliseconds
 */
BaseAnimator.DEFAULT_DURATION_MILLISECONDS = 300;
/**
 * The default easing of the animation
 */
BaseAnimator.DEFAULT_EASING = "exp-out";
exports.BaseAnimator = BaseAnimator;
//# sourceMappingURL=baseAnimator.js.map