/**
 * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.
 * Licensed under the MIT License (the "License"); you may obtain a copy of the
 * license at https://github.com/palantir/svg-typewriter/blob/develop/LICENSE
 */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Utils = require("../utils");
var baseAnimator_1 = require("./baseAnimator");
var UnveilAnimator = (function (_super) {
    __extends(UnveilAnimator, _super);
    function UnveilAnimator() {
        var _this = _super.call(this) || this;
        _this.direction("bottom");
        return _this;
    }
    UnveilAnimator.prototype.direction = function (direction) {
        if (direction == null) {
            return this._direction;
        }
        else {
            if (UnveilAnimator.SupportedDirections.indexOf(direction) === -1) {
                throw new Error("unsupported direction - " + direction);
            }
            this._direction = direction;
            return this;
        }
    };
    UnveilAnimator.prototype.animate = function (selection) {
        var attr = Utils.DOM.getBBox(selection);
        var mask = selection.select(".clip-rect");
        mask.attr("width", 0);
        mask.attr("height", 0);
        switch (this._direction) {
            case "top":
                mask.attr("y", attr.y + attr.height);
                mask.attr("x", attr.x);
                mask.attr("width", attr.width);
                break;
            case "bottom":
                mask.attr("y", attr.y);
                mask.attr("x", attr.x);
                mask.attr("width", attr.width);
                break;
            case "left":
                mask.attr("y", attr.y);
                mask.attr("x", attr.x);
                mask.attr("height", attr.height);
                break;
            case "right":
                mask.attr("y", attr.y);
                mask.attr("x", attr.x + attr.width);
                mask.attr("height", attr.height);
                break;
            default:
                break;
        }
        this._animate(mask, attr);
        return _super.prototype.animate.call(this, selection);
    };
    return UnveilAnimator;
}(baseAnimator_1.BaseAnimator));
UnveilAnimator.SupportedDirections = ["top", "bottom", "left", "right"];
exports.UnveilAnimator = UnveilAnimator;
//# sourceMappingURL=unveilAnimator.js.map