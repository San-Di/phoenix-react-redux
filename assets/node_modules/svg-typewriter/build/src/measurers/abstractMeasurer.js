/**
 * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.
 * Licensed under the MIT License (the "License"); you may obtain a copy of the
 * license at https://github.com/palantir/svg-typewriter/blob/develop/LICENSE
 */
"use strict";
var Utils = require("../utils");
;
var AbstractMeasurer = (function () {
    function AbstractMeasurer(area, className) {
        this.textMeasurer = this.getTextMeasurer(area, className);
    }
    AbstractMeasurer.prototype.measure = function (text) {
        if (text === void 0) { text = AbstractMeasurer.HEIGHT_TEXT; }
        return this.textMeasurer(text);
    };
    AbstractMeasurer.prototype.checkSelectionIsText = function (d) {
        return d[0][0].tagName === "text" || !d.select("text").empty();
    };
    AbstractMeasurer.prototype.getTextMeasurer = function (area, className) {
        var _this = this;
        if (!this.checkSelectionIsText(area)) {
            var textElement_1 = area.append("text");
            if (className) {
                textElement_1.classed(className, true);
            }
            textElement_1.remove();
            return function (text) {
                area.node().appendChild(textElement_1.node());
                var areaDimension = _this.measureBBox(textElement_1, text);
                textElement_1.remove();
                return areaDimension;
            };
        }
        else {
            var parentNode_1 = area.node().parentNode;
            var textSelection_1;
            if (area[0][0].tagName === "text") {
                textSelection_1 = area;
            }
            else {
                textSelection_1 = area.select("text");
            }
            area.remove();
            return function (text) {
                parentNode_1.appendChild(area.node());
                var areaDimension = _this.measureBBox(textSelection_1, text);
                area.remove();
                return areaDimension;
            };
        }
    };
    AbstractMeasurer.prototype.measureBBox = function (d, text) {
        d.text(text);
        var bb = Utils.DOM.getBBox(d);
        return { width: bb.width, height: bb.height };
    };
    return AbstractMeasurer;
}());
AbstractMeasurer.HEIGHT_TEXT = "bqpdl";
exports.AbstractMeasurer = AbstractMeasurer;
//# sourceMappingURL=abstractMeasurer.js.map