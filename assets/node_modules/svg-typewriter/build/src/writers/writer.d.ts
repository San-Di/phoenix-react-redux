/// <reference types="d3" />
/**
 * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.
 * Licensed under the MIT License (the "License"); you may obtain a copy of the
 * license at https://github.com/palantir/svg-typewriter/blob/develop/LICENSE
 */
import * as d3 from "d3";
import * as Animators from "../animators";
import * as Measurers from "../measurers";
import * as Wrappers from "../wrappers";
export interface IWriteOptions {
    selection: d3.Selection<any>;
    xAlign: string;
    yAlign: string;
    textRotation: number;
    animator?: Animators.BaseAnimator;
}
export declare class Writer {
    private static nextID;
    private static SupportedRotation;
    private static AnchorConverter;
    private static XOffsetFactor;
    private static YOffsetFactor;
    _writerID: number;
    _elementID: number;
    private _measurer;
    private _wrapper;
    private _addTitleElement;
    constructor(measurer: Measurers.AbstractMeasurer, wrapper?: Wrappers.Wrapper);
    measurer(newMeasurer: Measurers.AbstractMeasurer): Writer;
    wrapper(newWrapper: Wrappers.Wrapper): Writer;
    addTitleElement(add: boolean): Writer;
    write(text: string, width: number, height: number, options: IWriteOptions): void;
    private writeLine(line, g, width, xAlign, yOffset);
    private writeText(text, writingArea, width, height, xAlign, yAlign);
    private addClipPath(selection, _transform);
}
